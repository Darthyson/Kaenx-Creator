<Window x:Class="Kaenx.Creator.ViewerWindow" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:local="clr-namespace:Kaenx.Creator" 
    xmlns:models="clr-namespace:Kaenx.Creator.Models" 
    xmlns:System="clr-namespace:System;assembly=mscorlib" 
    xmlns:p="clr-namespace:Kaenx.Creator.Properties" 
    xmlns:svgc="http://sharpvectors.codeplex.com/svgc/" 
    xmlns:conv="clr-namespace:Kaenx.Creator.Converter" 
    xmlns:selectors="clr-namespace:Kaenx.Creator.Viewer.Selectors" 
    xmlns:ctrls="clr-namespace:Kaenx.Creator.Viewer.Controls" 
    mc:Ignorable="d" Icon="/FileLogo.ico" x:Name="ParaControl" Title="Kaenx-Creator ProdViewer" Height="700" Width="1300">
    <Window.Resources>
        <conv:BoolToVisibility x:Key="Bool2Vis" />
        <conv:EmptyToVisibility x:Key="EmptyToVis" />
        <conv:IsHeadlineToObject x:Key="HeadlineToSize" TrueValue="14" FalseValue="12" />
        <conv:IsHeadlineToObject x:Key="HeadlineToWeight" TrueValue="Bold" FalseValue="Normal" />
        <conv:SeparatorHintToObject x:Key="HintToIcon" InformationValue="/Assets/Viewer/information.png" ErrorValue="/Assets/Viewer/error.png" />
        <conv:SeparatorHintToObject x:Key="HintToBrush" InformationValue="Aquamarine" ErrorValue="Red" />
        <conv:BinaryToBool x:Key="BinToBool" />

        <DataTemplate x:Key="ChannelTemplate">
            <Expander IsExpanded="True" BorderThickness="0 1 1 1" BorderBrush="Gray" Background="LightGray" Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}" HorizontalContentAlignment="Stretch">
                <ListView BorderThickness="0 1 0 0" ItemsSource="{Binding Blocks}" SelectedItem="{Binding SelectedBlock, ElementName=ParaControl, Mode=TwoWay}" SelectedValue="{Binding SelectedBlockId, ElementName=ParaControl, Mode=TwoWay}" SelectedValuePath="Id" HorizontalAlignment="Stretch">
                    <ListView.Resources>
                        <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
                            <Setter Property="SnapsToDevicePixels" Value="true"/>
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="Template">
                              <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                  <Border 
                                    Name="Border"
                                    Padding="0 10"
                                    SnapsToDevicePixels="true"
                                    Background="Transparent"
                                    BorderThickness="5 0 0 0"
                                    BorderBrush="Transparent"
                                    Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}">
                                    
                                    <TextBlock Text="{Binding Text}" Margin="20 0 10 0" />
                                  </Border>
                                  <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                      <Setter TargetName="Border" Property="BorderBrush" Value="Orange"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#B0DEB0"/>
                                        <Setter TargetName="Border" Property="BorderBrush" Value="Green"/>
                                    </Trigger>
                                  </ControlTemplate.Triggers>
                                </ControlTemplate>
                              </Setter.Value>
                            </Setter>
                          </Style>
                    </ListView.Resources>
                </ListView>
                <Expander.Header>
                    <Border Height="40">
                        <TextBlock Text="{Binding Text}" VerticalAlignment="Center" Margin="10 0 10 0" />
                    </Border>
                </Expander.Header>
            </Expander>
        </DataTemplate>
        <DataTemplate x:Key="IndependentTemplate">
            <ListView ItemsSource="{Binding Blocks}" SelectedItem="{Binding SelectedBlock, ElementName=ParaControl, Mode=TwoWay}" SelectedValue="{Binding SelectedBlockId, ElementName=ParaControl, Mode=TwoWay}" SelectedValuePath="Id">
                <ListView.Resources>
                    <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                            <Border 
                                Name="Border"
                                Padding="0 10"
                                SnapsToDevicePixels="true"
                                Background="Transparent"
                                BorderThickness="5 0 0 0"
                                BorderBrush="Transparent"
                                Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}">
                                
                                <TextBlock Text="{Binding Text}" Margin="20 0 10 0" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Orange"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#B0DEB0"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Green"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.Resources>
            </ListView>
        </DataTemplate>


        <DataTemplate x:Key="TypeNotFound">
            <TextBlock>
                <Run Text="Type nicht gefunden..." />
                <LineBreak />
                <Run Text="{Binding Id}" />
                <LineBreak />
                <Run Text="{Binding Text}" />
            </TextBlock>
        </DataTemplate>

        <DataTemplate x:Key="TypeEnums">
            <Grid Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition MinWidth="300" MaxWidth="500" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" TextWrapping="Wrap" />

                
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <ComboBox IsEnabled="{Binding IsEnabled}" ItemsSource="{Binding Options}" DisplayMemberPath="Text" SelectedValuePath="Value" SelectedValue="{Binding Value, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                    <TextBlock Grid.Column="1" Text="{Binding SuffixText}" Visibility="{Binding SuffixText, Converter={StaticResource EmptyToVis}}" Margin="10 0" VerticalAlignment="Center" />
                </Grid>

                <TextBlock Grid.Column="2" Text="{Binding Value}" TextAlignment="Right" />
                <TextBlock Grid.Column="3" Text="{Binding Id}" TextAlignment="Right" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TypeEnumsTwo">
            <Grid Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}" Margin="0 5" x:Name="test">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition MinWidth="300" MaxWidth="500" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" TextWrapping="Wrap" />

                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <StackPanel>
                        <RadioButton IsEnabled="{Binding IsEnabled}" IsChecked="{Binding Selected1, Mode=TwoWay}" Tag="{Binding Option1.Value}" Content="{Binding Option1.Text}" GroupName="{Binding Id}" />
                        <RadioButton IsEnabled="{Binding IsEnabled}" IsChecked="{Binding Selected2, Mode=TwoWay}" Content="{Binding Option2.Text}" GroupName="{Binding Id}" />
                    </StackPanel>
                    <TextBlock Grid.Column="1" Text="{Binding SuffixText}" Visibility="{Binding SuffixText, Converter={StaticResource EmptyToVis}}" Margin="10 0" VerticalAlignment="Center" />
                </Grid>

                
                <TextBlock Grid.Column="2" Text="{Binding Value}" TextAlignment="Right" />
                <TextBlock Grid.Column="3" Text="{Binding Id}" TextAlignment="Right" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TypeNumber">
            <Grid Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition MinWidth="300" MaxWidth="500" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" />

                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <ctrls:NumberBox IsEnabled="{Binding IsEnabled}" Value="{Binding Value}" ValueOk="{Binding Value, Mode=TwoWay}" Minimum="{Binding Minimum}" Maximum="{Binding Maximum}" Default="{Binding Default}" Increment="{Binding Increment}" />
                    <TextBlock Grid.Column="1" Text="{Binding SuffixText}" Visibility="{Binding SuffixText, Converter={StaticResource EmptyToVis}}" Margin="10 0" VerticalAlignment="Center" />
                </Grid>

                <TextBlock Grid.Column="3" Text="{Binding Id}" TextAlignment="Right" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TypeSlider">
            <Grid Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition MinWidth="300" MaxWidth="500" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" />

                
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <ctrls:Slider x:Name="slider" Value="{Binding Value}" ValueOk="{Binding Value, Mode=TwoWay}" Maximum="{Binding Maximum}" Minimum="{Binding Minimum}" Interval="{Binding Invrement}" />
                    <TextBlock Grid.Column="1" Margin="10 0 0 0" VerticalAlignment="Center">
                        <Run Text="{Binding Value, ElementName=slider}" />
                        <Run Text="{Binding SuffixText}" />
                    </TextBlock>
                </Grid>

                <TextBlock Grid.Column="3" Text="{Binding Id}" TextAlignment="Right" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TypePicture">
            <Grid Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition MinWidth="300" MaxWidth="500" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" />

                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <Image Source="{Binding Image}" Stretch="Uniform" MaxHeight="300" />
                    <TextBlock Grid.Column="1" Text="{Binding SuffixText}" Visibility="{Binding SuffixText, Converter={StaticResource EmptyToVis}}" Margin="10 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Left" />
                </Grid>
                
                <TextBlock Grid.Column="3" Text="{Binding Id}" TextAlignment="Right" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TypeCheckBox">
            <Grid Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition MinWidth="300" MaxWidth="500" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" TextWrapping="Wrap" />

                <CheckBox Grid.Column="1" Content="{Binding SuffixText}" IsChecked="{Binding Value, Converter={StaticResource BinToBool}}" />
                <TextBlock Grid.Column="2" Text="{Binding Value}" TextAlignment="Right" />
                <TextBlock Grid.Column="3" Text="{Binding Id}" TextAlignment="Right" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TypeTextRead">
            <Grid Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition MinWidth="300" MaxWidth="500" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" TextWrapping="Wrap" />

                
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding Value, Mode=TwoWay}" VerticalAlignment="Center" />
                    <TextBlock Grid.Column="1" Text="{Binding SuffixText}" Visibility="{Binding SuffixText, Converter={StaticResource EmptyToVis}}" Margin="10 0" VerticalAlignment="Center" />
                </Grid>

                <TextBlock Grid.Column="3" Text="{Binding Id}" TextAlignment="Right" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TypeText">
            <Grid Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition MinWidth="300" MaxWidth="500" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" TextWrapping="Wrap" />

                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox Height="22" VerticalContentAlignment="Center" IsEnabled="{Binding IsEnabled}" MaxLength="{Binding MaxLength}" Text="{Binding Value, Mode=TwoWay}" VerticalAlignment="Center" />
                    <TextBlock Grid.Column="1" Text="{Binding SuffixText}" Visibility="{Binding SuffixText, Converter={StaticResource EmptyToVis}}" Margin="10 0 0 0" VerticalAlignment="Center" />
                </Grid>

                <TextBlock Grid.Column="3" Text="{Binding Id}" TextAlignment="Right" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TypeNone">
            <Grid Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}" Margin="0 5">
                <TextBlock Text="{Binding Text}" Foreground="Gray" Margin="10 0" VerticalAlignment="Center" TextWrapping="Wrap" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TypeSeparator">
            <Grid Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition MinWidth="300" MaxWidth="500" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>

                <Border Grid.ColumnSpan="2" Margin="10 5" BorderBrush="Gray" BorderThickness="0 1 0 0" Visibility="{Binding IsLineVisible, Converter={StaticResource Bool2Vis}}" />
                <!--Visibility="{Binding Text, Converter={StaticResource ConvertStringVisible}}"-->
                <TextBlock Grid.ColumnSpan="2" Text="{Binding Text}" FontSize="{Binding Hint, Converter={StaticResource HeadlineToSize}}" FontWeight="{Binding Hint, Converter={StaticResource HeadlineToWeight}}" Margin="10 0" VerticalAlignment="Center" TextWrapping="Wrap" />
                <TextBlock Grid.Column="3" Text="{Binding Id}" TextAlignment="Right" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TypeSeparatorBox">
            <Border Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}" Margin="10 5" Padding="10" BorderThickness="1" BorderBrush="{Binding Hint, Converter={StaticResource HintToBrush}}">
                <Border.Background>
                    <SolidColorBrush Color="{Binding Hint, Converter={StaticResource HintToBrush}}" Opacity="0.2" />
                </Border.Background>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>

                    <!--<FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{Binding IsError, Converter={StaticResource ConvertBoolToIcon}}" />-->
                    <Image Height="20" Source="{Binding Hint, Converter={StaticResource HintToIcon}}" />
                    <TextBlock Grid.Column="1" Text="{Binding Text}" Margin="10 3 0 3" VerticalAlignment="Center" TextWrapping="Wrap" />
                    <TextBlock Grid.Column="2" Text="{Binding Id}" TextAlignment="Right" />
                </Grid>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="TypeColor">
            <Grid Visibility="{Binding IsVisible, Converter={StaticResource ConvertBoolToVisible}}" Margin="0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition MinWidth="300" MaxWidth="500" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Text}" Margin="10 0" VerticalAlignment="Center" />


                
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    
                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
    
                        <TextBox x:Name="InCol" Text="{Binding Value, Mode=TwoWay}" MaxLength="6" />
                        <Border Grid.Column="1" BorderThickness="0 1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#A3000000" />
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="{Binding Color}" />
                            </Border.Background>
                        </Border>
                        <Button Grid.Column="2" Content="Picker" BorderThickness="0 1 1 1">
                            <Button.BorderBrush>
                                <SolidColorBrush Color="#A3000000" />
                            </Button.BorderBrush>
                            <!--<Button.Flyout>
                                <Flyout Index>
                                    <ColorPicker x:Name="ColorPickerFlyout" Color="{Binding Color, Mode=TwoWay}" IsMoreButtonVisible="True"/>
                                    <TextBlock Text="Hier kommt ColorPicker" />
                                </Flyout>
                            </Button.Flyout>-->
                        </Button>
                    </Grid>

                    <TextBlock Grid.Column="1" Text="{Binding SuffixText}" Visibility="{Binding SuffixText, Converter={StaticResource EmptyToVis}}" Margin="10 0 0 0" VerticalAlignment="Center" />
                </Grid>

                <TextBlock Grid.Column="2" Text="{Binding Value}" TextAlignment="Right" />
                <TextBlock Grid.Column="3" Text="{Binding Id}" TextAlignment="Right" />
            </Grid>
        </DataTemplate>
        
        <DataTemplate x:Key="TypeTable">
            <ctrls:Table Visibility="{Binding IsVisible, Converter={StaticResource Bool2Vis}}" DataContext="{Binding}" />
        </DataTemplate>
        

        <selectors:ChannelSelector x:Key="ChannelSelector" 
            Channel="{StaticResource ChannelTemplate}" 
            Independent="{StaticResource IndependentTemplate}" />
        <selectors:ParameterTypeSelector x:Key="ParaTypeSelector" 
            NotFound="{StaticResource TypeNotFound}" 
            None="{StaticResource TypeNone}" 
            Enums="{StaticResource TypeEnums}" 
            EnumsTwo="{StaticResource TypeEnumsTwo}" 
            Number="{StaticResource TypeNumber}" 
            TextRead="{StaticResource TypeTextRead}" 
            Text="{StaticResource TypeText}" 
            Seperator="{StaticResource TypeSeparator}" 
            SeperatorBox="{StaticResource TypeSeparatorBox}" 
            Slider="{StaticResource TypeSlider}" 
            Picture="{StaticResource TypePicture}" 
            CheckBox="{StaticResource TypeCheckBox}"
            Color="{StaticResource TypeColor}"
            Table="{StaticResource TypeTable}" />
    </Window.Resources>


    <Grid Grid.Row="2">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" MinWidth="100" MaxWidth="300" />
            <ColumnDefinition />
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>

        
        <ScrollViewer Grid.RowSpan="3" VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding Channels}" ItemTemplateSelector="{StaticResource ChannelSelector}" />
        </ScrollViewer>


        <Grid Grid.RowSpan="3" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition MinWidth="300" MaxWidth="500" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="17" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock Text="{x:Static p:Resources.prodv_text}" TextAlignment="Center" />
            <TextBlock Grid.Column="1" Grid.ColumnSpan="2" Text="{x:Static p:Resources.prodv_settings}" TextAlignment="Center" />
            <TextBlock Grid.Column="2" Text="{x:Static p:Resources.prodv_value}" TextAlignment="Center" />
            <TextBlock Grid.Column="3" Text="{x:Static p:Resources.prodv_id}" TextAlignment="Center" />
            
            <ScrollViewer Grid.Row="1" Grid.ColumnSpan="4">
                <ItemsControl ItemTemplateSelector="{StaticResource ParaTypeSelector}" ItemsSource="{Binding SelectedBlock.Parameters}" />
            </ScrollViewer>
        </Grid>

        <Expander Grid.Column="2" ExpandDirection="Right">
            <Expander.Header>
                <TextBlock Text="Kommunikationsobjekte und Logger">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="90" />
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Expander.Header>

            <Grid Width="400">
                <Grid.RowDefinitions>
                    <RowDefinition MinHeight="300" />
                    <RowDefinition Height="10" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <DataGrid ItemsSource="{Binding ComObjects}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False">
                    <DataGrid.Columns>
        
                        <DataGridTextColumn Header="{x:Static p:Resources.prop_number}" Binding="{Binding Number}" SortDirection="Ascending" />
                        <DataGridTextColumn Header="{x:Static p:Resources.prop_name}" Binding="{Binding Name}" />
                        <DataGridTextColumn Header="{x:Static p:Resources.prop_function}" Binding="{Binding Function}" />
        
                    </DataGrid.Columns>
                </DataGrid>
        
                <GridSplitter Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
        
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Button Content="{x:Static p:Resources.prodv_getval}" Click="ClickGetValue" />
                    <TextBlock Grid.Row="1" x:Name="LogViewer" />
                </Grid>
            </Grid>
        </Expander>
    </Grid>
</Window>