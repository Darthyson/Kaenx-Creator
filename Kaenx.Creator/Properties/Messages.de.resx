<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="global_exception" xml:space="preserve">
    <value>Bitte speichern Sie ihr Projekt und starten Sie die Anwendung neu.</value>
    <comment/>
  </data>
  <data name="global_exception_title" xml:space="preserve">
    <value>Error</value>
    <comment/>
  </data>
  <data name="update_new" xml:space="preserve">
    <value>Es ist eine neue version verfügbar: v{0}\r\nJetzt zu den Github Releases gehen?</value>
    <comment>Versionstring like 1.1.2</comment>
  </data>
  <data name="update_title" xml:space="preserve">
    <value>Update suchen</value>
    <comment/>
  </data>
  <data name="update_uptodate" xml:space="preserve">
    <value>Sie verwenden bereits die neueste version: v{0}</value>
    <comment>Versionstring like 1.1.2</comment>
  </data>
  <data name="message_prompt_id" xml:space="preserve">
    <value>Neue Nachricht ID</value>
    <comment/>
  </data>
  <data name="prompt_id" xml:space="preserve">
    <value>ID Manuell</value>
    <comment/>
  </data>
  <data name="prompt_error" xml:space="preserve">
    <value>Bitte geben Sie eine Ganzzahl ein.</value>
    <comment/>
  </data>
  <data name="promt_error_title" xml:space="preserve">
    <value>Eingabefehler</value>
    <comment/>
  </data>
  <data name="prompt_double" xml:space="preserve">
    <value>Die ID {0} wird bereits von der Nachricht {1} verwendet.</value>
    <comment>ID; Name of Message</comment>
  </data>
  <data name="prompt_double_title" xml:space="preserve">
    <value>Doppelte ID</value>
    <comment/>
  </data>
  <data name="prompt_auto_error" xml:space="preserve">
    <value>Das Element hat bereits die erste freie ID</value>
    <comment/>
  </data>
  <data name="prompt_auto_error_title" xml:space="preserve">
    <value>Automatische ID</value>
    <comment/>
  </data>
  <data name="baggage_delete_error" xml:space="preserve">
    <value>Der Anhang wird von {0} ParameterTypes verwendet.\r\nTrotzdem löschen?</value>
    <comment>Count of Items</comment>
  </data>
  <data name="baggage_delete_error_title" xml:space="preserve">
    <value>Anhang löschen</value>
    <comment/>
  </data>
  <data name="baggage_change_title" xml:space="preserve">
    <value>Anhang ändern</value>
    <comment/>
  </data>
  <data name="baggage_change_success" xml:space="preserve">
    <value>Anhang wurde erfolgreich geändert</value>
    <comment/>
  </data>
  <data name="baggage_change_filter" xml:space="preserve">
    <value>Bilder</value>
    <comment/>
  </data>
  <data name="baggage_import_title" xml:space="preserve">
    <value>Anhänge importieren</value>
    <comment/>
  </data>
  <data name="baggage_import_filter" xml:space="preserve">
    <value>Baggage Datei</value>
    <comment/>
  </data>
  <data name="baggage_import_prompt" xml:space="preserve">
    <value>Vorhandene Anhänge löschen?</value>
    <comment/>
  </data>
  <data name="baggage_export_title" xml:space="preserve">
    <value>Anhang exportieren</value>
    <comment/>
  </data>
  <data name="baggage_export_filter" xml:space="preserve">
    <value>Anhang Datei</value>
    <comment/>
  </data>
  <data name="viewer_get_title" xml:space="preserve">
    <value>Wert abfragen</value>
    <comment/>
  </data>
  <data name="viewer_get_prompt" xml:space="preserve">
    <value>Id des Parameters:</value>
    <comment/>
  </data>
  <data name="viewer_get_inactive" xml:space="preserve">
    <value>Parameter mit der Id {0} ist aktuell nicht sichtbar.</value>
    <comment>ParameterId</comment>
  </data>
  <data name="viewer_get_value" xml:space="preserve">
    <value>Parameter mit der Id {0} hat den Wert: {1}</value>
    <comment>ParameterId; Value</comment>
  </data>
  <data name="viewer_get_error" xml:space="preserve">
    <value>Es wurde kein Parameter mit der Id {0} gefunden.</value>
    <comment>ParameterId</comment>
  </data>
  <data name="viewer_logger" xml:space="preserve">
    <value>Parameter geändert: ID={0} Wert={1}</value>
    <comment>ParameterId; Value</comment>
  </data>
  <data name="memcalc_para" xml:space="preserve">
    <value>Parameter '{0}' liegt außerhalb des Speichers</value>
    <comment>ParameterName</comment>
  </data>
  <data name="memcalc_union" xml:space="preserve">
    <value>Union '{0}' liegt außerhalb des Speichers</value>
    <comment>UnionName</comment>
  </data>
  <data name="memcalc_title" xml:space="preserve">
    <value>Speicherbelegung Fehler</value>
    <comment/>
  </data>
</root>