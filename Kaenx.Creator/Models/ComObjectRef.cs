using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Text;

namespace Kaenx.Creator.Models
{
    public class ComObjectRef : INotifyPropertyChanged
    {

        public ComObjectRef() {}
        public ComObjectRef(ComObject com) {
            IsAutoGenerated = true;
            ComObjectObject = com;
            com.PropertyChanged += Com_PropertyChanged;
        }


        private async void Com_PropertyChanged(object sender, PropertyChangedEventArgs e = null) {
            if (e == null || e.PropertyName != "Name") return;
            Name = (sender as ComObject).Name;
        }

        public bool IsAutoGenerated {get;set;} = false;
        
        private int _id = -1;
        public int Id
        {
            get { return _id; }
            set { _id = value; Changed("Id"); }
        }

        private string _name = "Kurze Beschreibung";
        public string Name
        {
            get { return _name; }
            set { _name = value; Changed("Name"); }
        }

        private ComObject _comObjectObject;
        [JsonIgnore]
        public ComObject ComObjectObject
        {
            get { return _comObjectObject; }
            set { _comObjectObject = value; Changed("ComObjectObject"); }
        }

        [JsonIgnore]
        public string _comObject;
        public string ComObject
        {
            get { return ComObjectObject?.Name; }
            set { _comObject = value; }
        }

        public event PropertyChangedEventHandler PropertyChanged;
        private void Changed(string name)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(name));
        }
    }
}
