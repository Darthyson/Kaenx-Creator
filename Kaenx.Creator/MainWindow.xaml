<Window x:Class="Kaenx.Creator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Kaenx.Creator"
        xmlns:models="clr-namespace:Kaenx.Creator.Models"
        xmlns:conv="clr-namespace:Kaenx.Creator.Converter"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:p="clr-namespace:Kaenx.Creator.Properties"
        xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
        xmlns:ctrl="clr-namespace:Kaenx.Creator.Controls"
        xmlns:select="clr-namespace:Kaenx.Creator.Selectors"
        mc:Ignorable="d"
        Icon="FileLogo.ico"
        Title="Kaenx Creator" Height="700" Width="1300">
    <Window.Resources>
        <conv:BoolNegation x:Key="BoolNegate" />
        <conv:EmptyOListToBool x:Key="EmptyListToBool" />
        <conv:EmptyToBool x:Key="EmptyToBool" />
        <conv:EnumToVisibility x:Key="EnumToVis" />
        <conv:EnumToVisibility x:Key="EnumToVisNeg" Negate="True" />
        <conv:BoolToVisibility x:Key="BoolToVis" />
        <conv:TypeToBool x:Key="TypeToBool" />
        <conv:StateToBrush x:Key="StateToBrush" />
        <conv:BoolToBrush x:Key="BoolToBrush" TrueValue="Red" FalseValue="Black" />

        <Style x:Key="TopTabControl" TargetType="TabControl">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border BorderThickness="0 4 0 0" BorderBrush="#D0CEBF" Grid.Row="1">
                                <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter ContentSource="SelectedContent"/>
                                    </Border>
                                </Border>
                            </Border>
                            <TabPanel Grid.Row="0" IsItemsHost="true" Margin="10 0" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LeftTabControl" TargetType="TabControl">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Border BorderThickness="4 0 0 0" BorderBrush="#D0CEBF" Grid.Column="1">
                                <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter ContentSource="SelectedContent"/>
                                    </Border>
                                </Border>
                            </Border>
                            <TabPanel IsItemsHost="true"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TopTabItem" TargetType="TabItem">
            <Setter Property="BorderThickness" Value="0 0 0 4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border Padding="0 0 0 7" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Duration="0:0:0.5" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color">
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Duration="0:0:0.5" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color">
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="Green" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:1" Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:1" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:1" Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:1" Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="20" />
                                </Style>
                            </Border.Resources>
                            <Border Name="Border" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Padding="5 15 5 5" >
                                <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5 0">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="FontSize" Value="17" />
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LeftTabItem" TargetType="TabItem">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border Padding="0 0 0 7" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Duration="0:0:0.5" Storyboard.TargetName="Backx" Storyboard.TargetProperty="Color">
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Duration="0:0:0.5" Storyboard.TargetName="Backx" Storyboard.TargetProperty="Color">
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="Green" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:1" Storyboard.TargetName="Head" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:1" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:1" Storyboard.TargetName="Head" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:1" Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="20" />
                                </Style>
                            </Border.Resources>

                            <Grid>
                                <Border Name="Border" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Padding="5" Opacity="0.5" >
                                    <Border.Background>
                                        <SolidColorBrush x:Name="Backx" Color="Transparent" />
                                    </Border.Background>
                                </Border>
                                <ContentPresenter Name="Head" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LeftTabItem2" TargetType="TabItem">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border Padding="0 0 0 7" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Duration="0:0:0.5" Storyboard.TargetName="Backx" Storyboard.TargetProperty="Color">
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Duration="0:0:0.5" Storyboard.TargetName="Backx" Storyboard.TargetProperty="Color">
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="Red" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:1" Storyboard.TargetName="Head" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:1" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:1" Storyboard.TargetName="Head" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:1" Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="20" />
                                </Style>
                            </Border.Resources>

                            <Grid>
                                <Border Name="Border" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Padding="5" Opacity="0.5" >
                                    <Border.Background>
                                        <SolidColorBrush x:Name="Backx" Color="Transparent" />
                                    </Border.Background>
                                </Border>
                                <ContentPresenter Name="Head" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="MemNormal">
            <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Rectangle Height="18" Width="18" Fill="{Binding FillColor[0]}" Margin="2" />
                    <Rectangle Height="18" Width="18" Fill="{Binding FillColor[1]}" Margin="2" />
                    <Rectangle Height="18" Width="18" Fill="{Binding FillColor[2]}" Margin="2" />
                    <Rectangle Height="18" Width="18" Fill="{Binding FillColor[3]}" Margin="2" />
                    <Rectangle Height="18" Width="18" Fill="{Binding FillColor[4]}" Margin="2" />
                    <Rectangle Height="18" Width="18" Fill="{Binding FillColor[5]}" Margin="2" />
                    <Rectangle Height="18" Width="18" Fill="{Binding FillColor[6]}" Margin="2" />
                    <Rectangle Height="18" Width="18" Fill="{Binding FillColor[7]}" Margin="2" />
                </StackPanel>

                <HeaderedContentControl Header="Parameter">
                    <DataGrid ItemsSource="{Binding ParameterList}" AutoGenerateColumns="false" IsReadOnly="True" CanUserAddRows="False" CanUserResizeRows="False" CanUserResizeColumns="False"> 
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                            <DataGridTextColumn Header="Offset" Binding="{Binding Offset}" />
                            <DataGridTextColumn Header="Bit Offset" Binding="{Binding OffsetBit}" />
                            <DataGridTextColumn Header="Größe in Bits" Binding="{Binding ParameterTypeObject.SizeInBit}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </HeaderedContentControl>

                <HeaderedContentControl Header="Unions">
                    <DataGrid ItemsSource="{Binding UnionList}" AutoGenerateColumns="false" IsReadOnly="True" CanUserAddRows="False" CanUserResizeRows="False" CanUserResizeColumns="False"> 
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding UnionObject.Name}" />
                            <DataGridTextColumn Header="Offset" Binding="{Binding UnionObject.Offset}" />
                            <DataGridTextColumn Header="Bit Offset" Binding="{Binding UnionObject.OffsetBit}" />
                            <DataGridTextColumn Header="Größe in Bits" Binding="{Binding UnionObject.SizeInBit}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </HeaderedContentControl>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="MemModule">
            <TextBlock TextWrapping="Wrap" Text="Hier wird ein Module gespeichert. Um genaueres über die Belegung des Speicherplatzes zu erfahren, schauen Sie bitte in den Einstellungen für das Module nach." />
        </DataTemplate>
        <DataTemplate x:Key="MemGATable">
            <TextBlock TextWrapping="Wrap" Text="Hier wird die Gruppenadresstabelle gespeichert." />
        </DataTemplate>
        <DataTemplate x:Key="MemCOTable">
            <TextBlock TextWrapping="Wrap" Text="Hier wird die Kommunikationsobjekttabelle gespeichert." />
        </DataTemplate>
        <DataTemplate x:Key="MemASTable">
            <TextBlock TextWrapping="Wrap" Text="Hier wird die Assoziationstabelle gespeichert." />
        </DataTemplate>

        <select:MemorySelector x:Key="MemorySelector"
                Normal="{StaticResource MemNormal}"
                Module="{StaticResource MemModule}"
                GATable="{StaticResource MemGATable}"
                COTable="{StaticResource MemCOTable}"
                ASTable="{StaticResource MemASTable}"
                 />
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Menu>
            <MenuItem Header="{x:Static p:Resources.menu_proj}">
                <MenuItem x:Name="MenuLoad" Header="{x:Static p:Resources.menu_proj_new}">
                    <MenuItem.Icon>
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Menu/New.svg, AppName=Kaenx.Creator}" />
                    </MenuItem.Icon>
                    <MenuItem Header="Leer" Click="ClickNew" />
                    <Separator />
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.menu_proj_open}" Click="ClickOpen">
                    <MenuItem.Icon>
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Menu/Open.svg, AppName=Kaenx.Creator}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="MenuSave" IsEnabled="False" Header="{x:Static p:Resources.menu_proj_save}">
                    <MenuItem.Icon>
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Menu/Save.svg, AppName=Kaenx.Creator}" />
                    </MenuItem.Icon>
                    <MenuItem x:Name="MenuSaveBtn" Header="Speichern" Click="ClickSave" IsEnabled="false" />
                    <MenuItem Header="Speichern unter" Click="ClickSaveAs" />
                    <MenuItem Header="Speichern als Template" Click="ClickSaveTemplate" />
                </MenuItem>
                <MenuItem x:Name="MenuClose" IsEnabled="False" Header="{x:Static p:Resources.menu_proj_close}" />
            </MenuItem>
            <MenuItem x:Name="MenuImport" IsEnabled="False" Header="{x:Static p:Resources.menu_impo}">
                <MenuItem Header="{x:Static p:Resources.menu_impo_ets}" Click="ClickImport" />
                <MenuItem Header="{x:Static p:Resources.menu_impo_kaenx}" IsEnabled="False" />
            </MenuItem>
            <MenuItem IsEnabled="{Binding SelectedItem, ElementName=VersionList, Converter={StaticResource EmptyToBool}, ConverterParameter=true}" Header="Bereinigen">
                <MenuItem Header="Nicht verwendete Elemente markieren" Click="ClickShowClean" />
                <MenuItem Header="Nicht verwendete Elemente automatisch löschen" Click="ClickDoClean" />
            </MenuItem>
            <MenuItem x:Name="MenuLang" Header="{x:Static p:Resources.menu_lang}">
                <TextBlock Text="Please restart Application after changing language" TextWrapping="WrapWithOverflow" />
                <Separator />
                <MenuItem IsCheckable="True" Header="{x:Static p:Resources.menu_lang_default}" Tag="def" Click="ChangeLang" />
                <MenuItem IsCheckable="True" Header="Deutsch" Tag="de" Click="ChangeLang" />
                <MenuItem IsCheckable="True" Header="English" Tag="en" Click="ChangeLang" />
            </MenuItem>
        </Menu>

        <TabControl x:Name="TabsEdit" Grid.Row="1" Margin=" 0 10 0 0" IsEnabled="False" BorderThickness="0 0 0 4" Style="{StaticResource ResourceKey=TopTabControl}">

            <TabItem Header="{x:Static p:Resources.tabs_gen}" Style="{StaticResource TopTabItem}">
                <StackPanel>
                    <StackPanel.Resources>
                        <Style TargetType="HeaderedContentControl">
                            <Setter Property="Margin" Value="5" />
                        </Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="Margin" Value="5" />
                        </Style>
                        <Style TargetType="ComboBox">
                            <Setter Property="Margin" Value="5" />
                        </Style>
                        <Style TargetType="Button">
                            <Setter Property="Margin" Value="5" />
                        </Style>
                    </StackPanel.Resources>
                    <HeaderedContentControl Header="Manufacturer ID">
                        <TextBox Text="{Binding General.ManufacturerId, UpdateSourceTrigger=PropertyChanged}" />
                    </HeaderedContentControl>
                    <HeaderedContentControl Header="Projekt Name">
                        <TextBox Text="{Binding General.ProjectName, UpdateSourceTrigger=PropertyChanged}" />
                    </HeaderedContentControl>

                    <HeaderedContentControl Header="Sprachen für Katalog und Hardware">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition MaxWidth="300" />
                            </Grid.ColumnDefinitions>
                            
                            <ListBox x:Name="SupportedLanguagesGen" ItemsSource="{Binding General.Languages}" DisplayMemberPath="Text" />
                            
                            <StackPanel Grid.Column="1">
                                <HeaderedContentControl Header="Bearbeiten">
                                    <StackPanel>
                                        <ComboBox x:Name="LanguagesListGen" DisplayMemberPath="Text">
                                            <models:Language Text="Tschechisch" CultureCode="cs-CZ" />
                                            <models:Language Text="Dänisch" CultureCode="da-DK" />
                                            <models:Language Text="Deutsch" CultureCode="de-DE" />
                                            <models:Language Text="Griechisch" CultureCode="el-GR" />
                                            <models:Language Text="Englisch" CultureCode="en-US" />
                                            <models:Language Text="Spanisch" CultureCode="es-ES" />
                                            <models:Language Text="Finnisch" CultureCode="fi-FI" />
                                            <models:Language Text="Französisch" CultureCode="fr-FR" />
                                            <models:Language Text="Ungarisch" CultureCode="hu-HU" />
                                            <models:Language Text="Isländisch" CultureCode="is-IS" />
                                            <models:Language Text="Italienisch" CultureCode="it-IT" />
                                            <models:Language Text="Japanisch" CultureCode="ja-JP" />
                                            <models:Language Text="Norwegisch" CultureCode=" nb-NO" />
                                            <models:Language Text="Niederländisch" CultureCode="nl-NL" />
                                            <models:Language Text="Polnisch" CultureCode="pl-PL" />
                                            <models:Language Text="Portugisisch" CultureCode="pt-PT" />
                                            <models:Language Text="Rumänisch" CultureCode="ro-RO" />
                                            <models:Language Text="Russisch" CultureCode="ru-RU" />
                                            <models:Language Text="Slovakisch" CultureCode="sk-SK" />
                                            <models:Language Text="Slovenisch" CultureCode="sl-SI" />
                                            <models:Language Text="Schwedisch" CultureCode="sv-SE" />
                                            <models:Language Text="Türkisch" CultureCode="tr-TR" />
                                            <models:Language Text="Chinesisch" CultureCode="zh-CN" />
                                        </ComboBox>
                                        <Button Content="Hinzufügen" Click="ClickAddLanguageGen" />
                                        <Button Content="Entfernen" Click="ClickRemoveLanguageGen" />
                                    </StackPanel>
                                </HeaderedContentControl>
                                <HeaderedContentControl Header="Standard Sprache">
                                    <ComboBox ItemsSource="{Binding General.Languages}" SelectedValue="{Binding General.DefaultLanguage}" SelectedValuePath="CultureCode" DisplayMemberPath="Text"></ComboBox>
                                </HeaderedContentControl>
                            </StackPanel>
                        </Grid>
                    </HeaderedContentControl>
                </StackPanel>
            </TabItem>

            <TabItem Header="{x:Static p:Resources.tabs_cat}" Style="{StaticResource TopTabItem}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="250" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <TreeView Name="CatalogTree" ItemsSource="{Binding General.Catalog}">
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type models:CatalogItem}" ItemsSource="{Binding Items}">
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Unterpunkt hinzufügen" Click="ClickCatalogContext" IsEnabled="{Binding IsSection}" />
                                            <MenuItem Header="Entfernen" Click="ClickCatalogContextRemove" IsEnabled="{Binding Parent, Converter={StaticResource EmptyToBool}, ConverterParameter=true}" />
                                        </ContextMenu>
                                    </StackPanel.ContextMenu>
                                    <Image Source="/WpfTutorialSamples;component/Images/group.png" Margin="0,0,5,0" />
                                    <TextBlock Text="{Binding Name}" />
                                    <TextBlock Text=" [" Foreground="Blue" />
                                    <TextBlock Text="{Binding Items.Count}" Foreground="Blue" />
                                    <TextBlock Text="]" Foreground="Blue" />
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                    </TreeView>

                    <StackPanel Grid.Column="1" DataContext="{Binding ElementName=CatalogTree, Path=SelectedItem}" IsEnabled="{Binding ElementName=CatalogTree, Path=SelectedItem.Parent, Converter={StaticResource EmptyToBool}, ConverterParameter=true}">
                        <StackPanel.Resources>
                            <Style TargetType="HeaderedContentControl">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                            <Style TargetType="ComboBox">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </StackPanel.Resources>
                        <HeaderedContentControl Header="Name (intern)">
                            <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                        </HeaderedContentControl>
                        <HeaderedContentControl Header="Number">
                            <TextBox Text="{Binding Number, UpdateSourceTrigger=PropertyChanged}" />
                        </HeaderedContentControl>
                        <CheckBox Name="InCatalogSection" IsChecked="{Binding IsSection}" Content="Element ist eine Kategorie" IsEnabled="{Binding Items.Count, Converter={StaticResource EmptyListToBool}}" />
                        
                        <HeaderedContentControl Header="Text" Visibility="{Binding ElementName=InCatalogSection, Path=IsChecked, Converter={StaticResource BoolToVis}}">
                            <DataGrid ItemsSource="{Binding Text}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Sprache" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                    <DataGridTextColumn Header="Text" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </HeaderedContentControl>
                        <HeaderedContentControl Header="Hardware" Visibility="{Binding ElementName=InCatalogSection, Path=IsChecked, Converter={StaticResource BoolToVis}, ConverterParameter=true}">
                            <ComboBox Name="InCatalogHardware" Margin="0" ItemsSource="{Binding General.Hardware, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" SelectedItem="{Binding Hardware, Mode=TwoWay}" DisplayMemberPath="Name"/>
                        </HeaderedContentControl>
                    </StackPanel>
                </Grid>
            </TabItem>

            <TabItem Header="{x:Static p:Resources.tabs_hard}" Style="{StaticResource TopTabItem}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button Content="Hinzufügen" Click="ClickAddHardware" Margin="0 0 1 2" />
                    <Button Grid.Column="1" Content="Löschen" Click="ClickRemoveHardware" Margin="1 0 0 2" IsEnabled="{Binding ElementName=HardwareList, Path=SelectedItem, Converter={StaticResource EmptyToBool}, ConverterParameter=true}" />

                    <ListView x:Name="HardwareList" Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="2" ItemsSource="{Binding General.Hardware}" DisplayMemberPath="Name" />

                    <TabControl Grid.RowSpan="2" Grid.Column="2" Style="{StaticResource TopTabControl}" DataContext="{Binding ElementName=HardwareList, Path=SelectedItem}"  IsEnabled="{Binding ElementName=HardwareList, Path=SelectedItem, Converter={StaticResource EmptyToBool}, ConverterParameter=true}">
                        <TabItem Header="Allgemein" Style="{StaticResource TopTabItem}">
                            <StackPanel DataContext="{Binding ElementName=HardwareList, Path=SelectedItem}" IsEnabled="{Binding ElementName=HardwareList, Path=SelectedItem, Converter={StaticResource EmptyToBool}, ConverterParameter=true}">
                                <StackPanel.Resources>
                                    <Style TargetType="HeaderedContentControl">
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </StackPanel.Resources>
                                <HeaderedContentControl Header="Name">
                                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                                </HeaderedContentControl>
                                <HeaderedContentControl Header="Seriennummer">
                                    <TextBox Text="{Binding SerialNumber, UpdateSourceTrigger=PropertyChanged}" />
                                </HeaderedContentControl>
                                <HeaderedContentControl Header="Version">
                                    <TextBox Text="{Binding Version, UpdateSourceTrigger=PropertyChanged}" />
                                </HeaderedContentControl>
                                <HeaderedContentControl Header="Busstrom">
                                    <TextBox Text="{Binding BusCurrent, UpdateSourceTrigger=PropertyChanged}" />
                                </HeaderedContentControl>
                                <CheckBox IsChecked="{Binding HasIndividualAddress, Mode=TwoWay}" Content="Hat eine Individuelle Adresse" />
                                <CheckBox IsChecked="{Binding IsPowerSupply, Mode=TwoWay}" Content="Gerät ist eine Spannungsversorgung" />
                                <CheckBox IsChecked="{Binding IsCoppler, Mode=TwoWay}" Content="Gerät ist ein Koppler" />
                                <CheckBox IsChecked="{Binding IsIpEnabled, Mode=TwoWay}" Content="Gerät kann KNXnet/IP" />

                                <CheckBox IsChecked="{Binding HasApplicationProgram, Mode=TwoWay}" Content="Hat ein Applikationsprogramm" />
                                <CheckBox IsChecked="{Binding HasApplicationProgram2, Mode=TwoWay}" Content="Hat ein zweites Applikationsprogramm" />
                            </StackPanel>
                        </TabItem>

                        <TabItem Header="Geräte" Style="{StaticResource TopTabItem}">
                            <DataGrid Grid.Row="1" ItemsSource="{Binding Devices}" AddingNewItem="OnAddingNewDevice" AutoGenerateColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                                    <DataGridTextColumn Header="Bestellnummer" Binding="{Binding OrderNumber}" />
                                    <DataGridCheckBoxColumn Header="Ist REG" Binding="{Binding IsRailMounted}" />
                                </DataGrid.Columns>
                                <DataGrid.RowDetailsTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Text="Hier stehen dinge drin" />

                                            <TextBlock Grid.Column="1" Text="Geräte-Text" Margin="0 10 0 0" />
                                            <DataGrid Grid.Row="1" Grid.Column="1" Margin="5 5 5 10" ItemsSource="{Binding Text}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="Sprache" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                                    <DataGridTextColumn Header="Text" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                                                </DataGrid.Columns>
                                            </DataGrid>

                                            <TextBlock Grid.Column="2" Text="Geräte-Beschreibung" Margin="0 10 0 0" />
                                            <DataGrid Grid.Row="1" Grid.Column="2" Margin="5 5 5 10" ItemsSource="{Binding Description}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="Sprache" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                                    <DataGridTextColumn Header="Text" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                                                </DataGrid.Columns>
                                            </DataGrid>
                                        </Grid>
                                    </DataTemplate>
                                </DataGrid.RowDetailsTemplate>
                            </DataGrid>
                        </TabItem>

                        <TabItem Header="Applikationen" Style="{StaticResource TopTabItem}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <StackPanel Orientation="Horizontal">
                                    <ComboBox Width="150" Name="InHardApp" Margin="2" ItemsSource="{Binding General.Applications, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" DisplayMemberPath="Name" />
                                    <Button Content="Hinzufügen" Click="ClickAddHardApp" Margin="2" />
                                    <Button Content="Entfernen" Margin="2" Click="ClickRemoveDeviceApp" IsEnabled="{Binding ElementName=DeviceAppList, Path=SelectedItem, Converter={StaticResource EmptyToBool}, ConverterParameter=true}" />
                                </StackPanel>

                                <ListBox Name="DeviceAppList" Grid.Row="1" ItemsSource="{Binding Apps}" DisplayMemberPath="Name" />
                            </Grid>
                        </TabItem>
                    </TabControl>

                </Grid>


                
            </TabItem>

            <TabItem Header="{x:Static p:Resources.tabs_apps}" Style="{StaticResource TopTabItem}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button Content="Hinzufügen" Click="ClickAddApp" Margin="0 0 1 2" />
                    <Button Grid.Column="1" Content="Löschen" Click="ClickRemoveApp" Margin="1 0 0 2" IsEnabled="{Binding ElementName=AppList, Path=SelectedItem, Converter={StaticResource EmptyToBool}, ConverterParameter=true}" />

                    <ListView x:Name="AppList" Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding General.Applications}" DisplayMemberPath="NameText" />

                    <Grid Grid.Column="2" Grid.RowSpan="2" DataContext="{Binding ElementName=AppList, Path=SelectedItem}" IsEnabled="{Binding ElementName=AppList, Path=SelectedItem, Converter={StaticResource EmptyToBool}, ConverterParameter=true}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.ColumnSpan="3">
                            <StackPanel.Resources>
                                <Style TargetType="HeaderedContentControl">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="Button">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </StackPanel.Resources>
                            <HeaderedContentControl Header="Name (intern)">
                                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                            </HeaderedContentControl>
                            <HeaderedContentControl Header="Nummer">
                                <TextBox Text="{Binding Number, UpdateSourceTrigger=PropertyChanged}" />
                            </HeaderedContentControl>
                            <HeaderedContentControl Header="BCU">
                                <ComboBox SelectedItem="{Binding Mask, Mode=TwoWay}" Margin="0" DisplayMemberPath="Id" IsEnabled="{Binding Versions.Count, Converter={StaticResource EmptyListToBool}}" ItemsSource="{Binding BCUs, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                            </HeaderedContentControl>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <TextBlock HorizontalAlignment="Center">
                                    <Run Text="Speicherart:" />
                                    <Run Text="{Binding Mask.Memory}" />
                                </TextBlock>

                                <TextBlock Grid.Column="1" HorizontalAlignment="Center">
                                    <Run Text="Ladeprocedure:" />
                                    <Run Text="{Binding Mask.Procedure}" />
                                </TextBlock>
                            </Grid>
                        </StackPanel>


                        <Separator Grid.Row="1" Grid.ColumnSpan="3" Margin="0 10 0 4" />

                        <Button Grid.Row="2" Content="Version hinzufügen" Click="ClickAddVersion" Margin="5 5 2.5 2" IsEnabled="{Binding Mask, Converter={StaticResource EmptyToBool}, ConverterParameter=true}" />
                        <Button Grid.Row="2" Grid.Column="1" Content="Version Löschen" Click="ClickRemoveVersion" Margin="2.5 5 5 2" IsEnabled="{Binding ElementName=VersionList, Path=SelectedItem, Converter={StaticResource EmptyToBool}, ConverterParameter=true}" />
                        <Button Grid.Row="2" Grid.Column="2" Content="Version Kopieren" Click="ClickCopyVersion" Margin="2.5 5 5 2" IsEnabled="{Binding ElementName=VersionList, Path=SelectedItem, Converter={StaticResource EmptyToBool}, ConverterParameter=true}" />

                        <ListView x:Name="VersionList" Grid.Row="3" Grid.ColumnSpan="3" ItemsSource="{Binding Versions}" DisplayMemberPath="NameText" Margin="5 5 5 0" />
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem DataContext="{Binding ElementName=VersionList, Path=SelectedItem}" Style="{StaticResource TopTabItem}" IsEnabled="{Binding ElementName=VersionList, Path=SelectedItem, Converter={StaticResource EmptyToBool}, ConverterParameter=true}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <!--<TextBlock FontSize="18" Text="{Binding ElementName=AppList, Path=SelectedItem.Name}" Margin="0 0 5 0" />-->
                        <TextBlock FontSize="18" Text="{Binding NameText}" />
                    </StackPanel>
                </TabItem.Header>

                <TabControl TabStripPlacement="Left" Style="{StaticResource LeftTabControl}">
                    <TabItem Header="{x:Static p:Resources.tabs_gen}" BorderThickness="0 0 4 0" Style="{StaticResource LeftTabItem}">
                        <StackPanel>
                            <StackPanel.Resources>
                                <Style TargetType="HeaderedContentControl">
                                    <Setter Property="Margin" Value="5" />
                                    <Setter Property="IsTabStop" Value="false" />
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="Button">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="ListBox">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="DataGrid">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </StackPanel.Resources>
                            
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition MaxWidth="300" />
                                </Grid.ColumnDefinitions>

                                <StackPanel>
                                    <HeaderedContentControl Header="Name (intern)">
                                        <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Header="Text">
                                        <DataGrid ItemsSource="{Binding Text}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Sprache" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                                <DataGridTextColumn Header="Text" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </HeaderedContentControl>
                                    
                                    <CheckBox IsChecked="{Binding IsParameterRefAuto}" Content="Parameter Refs automatisch berechnen" />
                                    <CheckBox IsChecked="{Binding IsComObjectRefAuto}" Content="KO Refs automatisch berechnen" />
                                    <CheckBox IsChecked="{Binding IsUnionActive}" Content="Unions aktivieren" />
                                    <CheckBox IsChecked="{Binding IsModulesActive}" Content="ModuleDefines aktivieren" />
                                  
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <StackPanel>
                                            <HeaderedContentControl Header="Adresstabelle Speicher:" Visibility="{Binding SelectedItem.Mask.Memory, ElementName=AppList, Converter={StaticResource EnumToVis}, ConverterParameter=Absolute}">
                                                <ComboBox ItemsSource="{Binding Memories}" SelectedItem="{Binding AddressMemoryObject}" DisplayMemberPath="Name" />
                                            </HeaderedContentControl>
                                            <HeaderedContentControl Header="Adresstabelle Offset:" Visibility="{Binding SelectedItem.Mask.Memory, ElementName=AppList, Converter={StaticResource EnumToVis}, ConverterParameter=Absolute}">
                                                <TextBox Text="{Binding AddressTableOffset, UpdateSourceTrigger=PropertyChanged}" />
                                            </HeaderedContentControl>
                                            <HeaderedContentControl Header="Adresstabelle maximale Einträge:">
                                                <TextBox Text="{Binding AddressTableMaxCount, UpdateSourceTrigger=PropertyChanged}" />
                                            </HeaderedContentControl>
                                        </StackPanel>

                                        <StackPanel Grid.Column="1">
                                            <HeaderedContentControl Header="Assoziationstabelle Speicher:" Visibility="{Binding SelectedItem.Mask.Memory, ElementName=AppList, Converter={StaticResource EnumToVis}, ConverterParameter=Absolute}">
                                                <ComboBox ItemsSource="{Binding Memories}" SelectedItem="{Binding AssociationMemoryObject}" DisplayMemberPath="Name" />
                                            </HeaderedContentControl>
                                            <HeaderedContentControl Header="Assoziationstabelle Offset:" Visibility="{Binding SelectedItem.Mask.Memory, ElementName=AppList, Converter={StaticResource EnumToVis}, ConverterParameter=Absolute}">
                                                <TextBox Text="{Binding AssociationTableOffset, UpdateSourceTrigger=PropertyChanged}" />
                                            </HeaderedContentControl>
                                            <HeaderedContentControl Header="Assoziationstabelle maximale Einträge:">
                                                <TextBox Text="{Binding AssociationTableMaxCount, UpdateSourceTrigger=PropertyChanged}" />
                                            </HeaderedContentControl>
                                        </StackPanel>

                                        <StackPanel Grid.Column="2">
                                            <HeaderedContentControl Header="Kommunikationsobjekttabelle Speicher:" Visibility="{Binding SelectedItem.Mask.Memory, ElementName=AppList, Converter={StaticResource EnumToVis}, ConverterParameter=Absolute}">
                                                <ComboBox ItemsSource="{Binding Memories}" SelectedItem="{Binding ComObjectMemoryObject}" DisplayMemberPath="Name" />
                                            </HeaderedContentControl>
                                            <HeaderedContentControl Header="Kommunikationsobjekttabelle Offset:" Visibility="{Binding SelectedItem.Mask.Memory, ElementName=AppList, Converter={StaticResource EnumToVis}, ConverterParameter=Absolute}">
                                                <TextBox Text="{Binding ComObjectTableOffset, UpdateSourceTrigger=PropertyChanged}" />
                                            </HeaderedContentControl>
                                        </StackPanel>
                                    </Grid>
                                </StackPanel>

                                <StackPanel Grid.Column="1">
                                    <HeaderedContentControl Header="Version">
                                        <TextBox Text="{Binding Number, UpdateSourceTrigger=PropertyChanged}" />
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Header="Namespace Version">
                                        <ComboBox x:Name="NamespaceSelection" DisplayMemberPath="DisplayName" SelectedValue="{Binding NamespaceVersion}" SelectedIndex="3" SelectedValuePath="Number">
                                            <ComboBox.ItemContainerStyle>
                                                <Style TargetType="{x:Type ComboBoxItem}">
                                                    <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
                                                </Style>
                                            </ComboBox.ItemContainerStyle>
                                        </ComboBox>
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Header="Sprachen" VerticalAlignment="Stretch">
                                        <ListBox x:Name="SupportedLanguagesVers" ItemsSource="{Binding Languages}" DisplayMemberPath="Text" />                                    
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Header="Bearbeiten">
                                        <StackPanel>
                                            <ComboBox x:Name="LanguagesListVers" DisplayMemberPath="Text">
                                                <models:Language Text="Tschechisch" CultureCode="cs-CZ" />
                                                <models:Language Text="Dänisch" CultureCode="da-DK" />
                                                <models:Language Text="Deutsch" CultureCode="de-DE" />
                                                <models:Language Text="Griechisch" CultureCode="el-GR" />
                                                <models:Language Text="Englisch" CultureCode="en-US" />
                                                <models:Language Text="Spanisch" CultureCode="es-ES" />
                                                <models:Language Text="Finnisch" CultureCode="fi-FI" />
                                                <models:Language Text="Französisch" CultureCode="fr-FR" />
                                                <models:Language Text="Ungarisch" CultureCode="hu-HU" />
                                                <models:Language Text="Isländisch" CultureCode="is-IS" />
                                                <models:Language Text="Italienisch" CultureCode="it-IT" />
                                                <models:Language Text="Japanisch" CultureCode="ja-JP" />
                                                <models:Language Text="Norwegisch" CultureCode=" nb-NO" />
                                                <models:Language Text="Niederländisch" CultureCode="nl-NL" />
                                                <models:Language Text="Polnisch" CultureCode="pl-PL" />
                                                <models:Language Text="Portugisisch" CultureCode="pt-PT" />
                                                <models:Language Text="Rumänisch" CultureCode="ro-RO" />
                                                <models:Language Text="Russisch" CultureCode="ru-RU" />
                                                <models:Language Text="Slovakisch" CultureCode="sk-SK" />
                                                <models:Language Text="Slovenisch" CultureCode="sl-SI" />
                                                <models:Language Text="Schwedisch" CultureCode="sv-SE" />
                                                <models:Language Text="Türkisch" CultureCode="tr-TR" />
                                                <models:Language Text="Chinesisch" CultureCode="zh-CN" />
                                            </ComboBox>
                                            <Button Content="Hinzufügen" Click="ClickAddLanguageVers" />
                                            <Button  Content="Entfernen" Click="ClickRemoveLanguageVers" />
                                        </StackPanel>
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Header="Standard Sprache">
                                        <ComboBox ItemsSource="{Binding Languages}" SelectedValue="{Binding DefaultLanguage}" SelectedValuePath="CultureCode" DisplayMemberPath="Text"></ComboBox>
                                    </HeaderedContentControl>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </TabItem>

                    <TabItem Header="Speicher" Style="{StaticResource LeftTabItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150" />
                                <ColumnDefinition Width="150" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Button Content="Hinzufügen" Click="ClickAddMemory" Margin="0 0 1 2" />
                            <Button Grid.Column="1" Content="Löschen" Click="ClickRemoveMemory" Margin="1 0 0 2" />

                            <ListView x:Name="ListMemories" Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding Memories}" DisplayMemberPath="Name" />

                            <ScrollViewer Grid.Column="3" Grid.RowSpan="2">
                                <StackPanel Margin="5" DataContext="{Binding ElementName=ListMemories, Path=SelectedItem}" IsEnabled="{Binding Converter={StaticResource EmptyToBool}, ConverterParameter=true}">
                                    <StackPanel.Resources>
                                        <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                                            <ObjectDataProvider.MethodParameters>
                                                <x:Type TypeName="models:MemoryTypes"/>
                                            </ObjectDataProvider.MethodParameters>
                                        </ObjectDataProvider>
                                        <Style TargetType="HeaderedContentControl">
                                            <Setter Property="Margin" Value="5" />
                                            <Setter Property="IsTabStop" Value="false" />
                                        </Style>
                                        <Style TargetType="CheckBox">
                                            <Setter Property="Margin" Value="5" />
                                        </Style>
                                        <Style TargetType="ComboBox">
                                            <Setter Property="Margin" Value="5" />
                                        </Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Margin" Value="5" />
                                        </Style>
                                        <Style TargetType="ListView">
                                            <Setter Property="Margin" Value="5" />
                                        </Style>
                                    </StackPanel.Resources>

                                    <HeaderedContentControl Header="Name">
                                        <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Header="Adresse" Visibility="{Binding ElementName=AppList, Path=SelectedItem.Mask.Memory, Converter={StaticResource EnumToVis}, ConverterParameter=Absolute}">
                                        <TextBox Text="{Binding Address, UpdateSourceTrigger=PropertyChanged}"/>
                                    </HeaderedContentControl>
                                    <CheckBox Content="Größe automatisch berechnen"  IsChecked="{Binding IsAutoSize}" />
                                    <HeaderedContentControl Header="Größe" IsEnabled="{Binding IsAutoSize, Converter={StaticResource BoolNegate}}">
                                        <TextBox Text="{Binding Size, UpdateSourceTrigger=PropertyChanged}" />
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Header="Offset" Visibility="{Binding ElementName=AppList, Path=SelectedItem.Mask.Memory, Converter={StaticResource EnumToVis}, ConverterParameter=Relative}">
                                        <TextBox Text="{Binding Offset, UpdateSourceTrigger=PropertyChanged}"/>
                                    </HeaderedContentControl>
                                    <CheckBox Content="Parameter/Unions/Module automatisch anordnen"  IsChecked="{Binding IsAutoPara}" />
                                    <CheckBox Content="Parameter/Unions/Module die bereits eine Adresse haben ebenfalls erneut anordnen" IsEnabled="{Binding IsAutoPara}" IsChecked="{Binding IsAutoOrder}" />

                                    <Button Content="Heatmap berechnen" Click="ClickCalcHeatmap" />
                                    
                                    <Grid Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition MinWidth="100" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.Resources>
                                            <DataTemplate x:Key="CellTemplate">
                                                <TextBlock />
                                            </DataTemplate>
                                        </Grid.Resources>
                                        
                                        <DataGrid ItemsSource="{Binding Sections}" AutoGenerateColumns="false" CanUserResizeRows="False" CanUserResizeColumns="False" CurrentCellChanged="CurrentCellChanged"> 
                                            <DataGrid.RowStyle>
                                                <Style TargetType="{x:Type DataGridRow}">
                                                    <Setter Property="Header" Value="{Binding Name}" />
                                                </Style>
                                            </DataGrid.RowStyle>

                                            <DataGrid.Columns>
                                                <DataGridTemplateColumn Header="0" CellTemplate="{StaticResource CellTemplate}">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[0]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="1">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[1]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="2">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[2]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="3">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[3]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="4">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[4]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="5">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[5]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="6">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[6]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="7">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[7]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="8">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[8]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="9">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[9]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="A">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[10]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="B">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[11]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="C">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[12]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="D">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[13]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="E">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[14]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="F">
                                                    <DataGridTemplateColumn.CellStyle>
                                                        <Style TargetType="{x:Type DataGridCell}">
                                                            <Setter Property="Background" Value="{Binding FillColor[15]}" />
                                                        </Style>
                                                    </DataGridTemplateColumn.CellStyle>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>

                                        <StackPanel Grid.Column="1" Margin="5 0" DataContext="{Binding CurrentMemoryByte}">
                                            <TextBlock>
                                                <Run Text="Adresse:" />
                                                <Run Text="{Binding Name, Mode=OneWay}" />
                                                <Run Text=" - " />
                                                <Run Text="{Binding Address}" />
                                            </TextBlock> 
                                            <TextBlock>
                                                <Run Text="Offset:" />
                                                <Run Text="{Binding Offset}" />
                                            </TextBlock>

                                            <ContentPresenter Content="{Binding}" ContentTemplateSelector="{StaticResource MemorySelector}" />
                                        </StackPanel>
                                    </Grid>

                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                    </TabItem>

                    <TabItem Header="ParameterTypes" Style="{StaticResource LeftTabItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150" />
                                <ColumnDefinition Width="150" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Button Content="Hinzufügen" Click="ClickAddParamType" Margin="0 0 1 2" />
                            <Button Grid.Column="1" Content="Löschen" Click="ClickRemoveParamType" Margin="1 0 0 2" />

                            <ListView x:Name="ListParamTypes" Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding ParameterTypes}">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" Foreground="{Binding IsNotUsed, Converter={StaticResource BoolToBrush}}" />
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                            <StackPanel Grid.Column="3" Grid.RowSpan="2" Margin="5" DataContext="{Binding ElementName=ListParamTypes, Path=SelectedItem}" IsEnabled="{Binding Converter={StaticResource EmptyToBool}, ConverterParameter=true}">
                                <StackPanel.Resources>
                                    <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                                        <ObjectDataProvider.MethodParameters>
                                            <x:Type TypeName="models:ParameterTypes"/>
                                        </ObjectDataProvider.MethodParameters>
                                    </ObjectDataProvider>
                                    <Style TargetType="HeaderedContentControl">
                                        <Setter Property="Margin" Value="5" />
                                        <Setter Property="IsTabStop" Value="false" />
                                    </Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                    <Style TargetType="ListView">
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </StackPanel.Resources>
                                    
                                <TextBlock Text="Dieser Parametertype wird von keinem Parameter verwendet." Foreground="Red" Visibility="{Binding IsNotUsed, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Margin="5" />

                                <HeaderedContentControl Header="Name">
                                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                                </HeaderedContentControl>
                                <HeaderedContentControl Header="Type">
                                    <ComboBox Margin="0 5" ItemsSource="{Binding Source={StaticResource dataFromEnum}}" SelectedItem="{Binding Type, Mode=TwoWay}" />
                                </HeaderedContentControl>
                                
                                <HeaderedContentControl Header="Manuelle Größe in Bits" Visibility="{Binding Type, Converter={StaticResource EnumToVisNeg}, ConverterParameter=None-IpAddress-Picture}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <CheckBox IsChecked="{Binding IsSizeManual}" VerticalAlignment="Center" />
                                        <TextBox Grid.Column="1" Text="{Binding SizeInBit, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" IsEnabled="{Binding IsSizeManual}"/>
                                    </Grid>
                                </HeaderedContentControl>


                                <Grid Margin="5 20 5 5"  Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=Enum, FallbackValue=Collapsed}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>

                                    <DataGrid x:Name="ptypeList" ItemsSource="{Binding Enums}" MaxHeight="100" AutoGenerateColumns="False" CanUserAddRows="False">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*" />
                                            <DataGridTextColumn Header="Wert" Binding="{Binding Value}" MinWidth="50" />
                                            <DataGridCheckBoxColumn Header="Übersetzen" Binding="{Binding Translate}" MinWidth="50" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    <Button Grid.Column="1" Content="+" Width="30" Click="ClickAddParamEnum" />
                                </Grid>

                                <DataGrid ItemsSource="{Binding SelectedItem.Text, ElementName=ptypeList}" Margin="5" AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False" Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=Enum, FallbackValue=Collapsed}">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Sprache" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                        <DataGridTextColumn Header="Text" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataGrid.Columns>
                                </DataGrid>
                                    
                                <StackPanel Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=NumberUInt-NumberInt-Float_DPT9-Float_IEEE_Single-Float_IEEE_Double, FallbackValue=Collapsed}">
                                    <HeaderedContentControl Header="Min">
                                        <TextBox Text="{Binding Min, UpdateSourceTrigger=PropertyChanged}"/>
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Header="Max">
                                        <TextBox Text="{Binding Max, UpdateSourceTrigger=PropertyChanged}"/>
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Header="Increment">
                                        <TextBox Text="{Binding Increment, UpdateSourceTrigger=PropertyChanged}"/>
                                    </HeaderedContentControl>
                                </StackPanel>

                                <HeaderedContentControl Header="UIHint" Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=NumberUInt-NumberInt, FallbackValue=Collapsed}">
                                    <ComboBox SelectedValue="{Binding UIHint}" SelectedValuePath="Tag">
                                        <ComboBoxItem Content="None" Tag="None" />
                                        <ComboBoxItem Content="Slider" Tag="Slider" />
                                        <ComboBoxItem Content="CheckBox" Tag="CheckBox" />
                                        <ComboBoxItem Content="ProgressBar" Tag="ProgressBar" />
                                    </ComboBox>
                                </HeaderedContentControl>

                                <HeaderedContentControl Header="UIHint" Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=Float_DPT9-Float_IEEE_Single-Float_IEEE_Double, FallbackValue=Collapsed}">
                                    <ComboBox SelectedValue="{Binding UIHint}" SelectedValuePath="Tag">
                                        <ComboBoxItem Content="None" Tag="None" />
                                        <ComboBoxItem Content="Slider" Tag="Slider" />
                                    </ComboBox>
                                </HeaderedContentControl>
                            </StackPanel>
                        </Grid>
                    </TabItem>

                    <TabItem Header="Unions" Visibility="{Binding IsUnionActive, Converter={StaticResource BoolToVis}}" Style="{StaticResource LeftTabItem}">
                        <ctrl:UnionView  Version="{Binding ElementName=VersionList, Path=SelectedItem}" Module="{Binding ElementName=VersionList, Path=SelectedItem}" />
                    </TabItem>

                    <TabItem Header="Module" Visibility="{Binding IsModulesActive, Converter={StaticResource BoolToVis}}" Style="{StaticResource LeftTabItem}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150" />
                                <ColumnDefinition Width="150" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Button Content="Hinzufügen" Click="ClickAddModule" Margin="0 0 1 2" />
                            <Button Grid.Column="1" Content="Löschen" Click="ClickRemoveModule" Margin="1 0 0 2" />

                            <ListView x:Name="ModuleList" Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding Modules}" DisplayMemberPath="Name" />

                            <TabControl Grid.RowSpan="2" Grid.Column="3" TabStripPlacement="Left" Style="{StaticResource LeftTabControl}"  DataContext="{Binding ElementName=ModuleList, Path=SelectedItem}" IsEnabled="{Binding Converter={StaticResource EmptyToBool}, ConverterParameter=true}">
                                <TabItem Header="Allgemein" Style="{StaticResource LeftTabItem2}"> 
                                    <ScrollViewer>
                                        <StackPanel Margin="5">
                                            <StackPanel.Resources>
                                                <Style TargetType="HeaderedContentControl">
                                                    <Setter Property="Margin" Value="5" />
                                                    <Setter Property="IsTabStop" Value="false" />
                                                </Style>
                                                <Style TargetType="CheckBox">
                                                    <Setter Property="Margin" Value="5" />
                                                </Style>
                                                <Style TargetType="ComboBox">
                                                    <Setter Property="Margin" Value="0 5" />
                                                </Style>
                                                <Style TargetType="Button">
                                                    <Setter Property="Margin" Value="5" />
                                                </Style>
                                                <Style TargetType="ListView">
                                                    <Setter Property="Margin" Value="5" />
                                                </Style>
                                            </StackPanel.Resources>

                                            <TextBlock Margin="5 0" VerticalAlignment="Center">
                                                <Run Text="UID:" />
                                                <Run Text="{Binding UId}"/>
                                            </TextBlock>

                                            <Grid Margin="5 0">
                                                <TextBlock VerticalAlignment="Center">
                                                    <Run Text="ID:" />
                                                    <Run Text="{Binding Id}"/>
                                                </TextBlock>
                                                <Button Content="Zurücksetzen" HorizontalAlignment="Right" Click="ResetId" />
                                            </Grid>
                                            
                                            <HeaderedContentControl Header="Name">
                                                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                                            </HeaderedContentControl>

                                            
                                            <HeaderedContentControl Header="ParameterBaseOffset:" Margin="5" IsTabStop="false">
                                                <ComboBox ItemsSource="{Binding Arguments}" SelectedItem="{Binding ParameterBaseOffset}" DisplayMemberPath="Name" Margin="0 5" />
                                            </HeaderedContentControl>

                                            <HeaderedContentControl Header="ComObjectBaseNumber:" Margin="5" IsTabStop="false">
                                                <ComboBox ItemsSource="{Binding Arguments}" SelectedItem="{Binding ComObjectBaseNumber}" DisplayMemberPath="Name" Margin="0 5" />
                                            </HeaderedContentControl>
                
                                            <CheckBox Content="ComObjectBaseNumber automatisch berechnen" IsChecked="{Binding IsComObjectBaseNumberAuto}" />
                                            
                                            <Grid Margin="5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto" />
                                                    <ColumnDefinition MinWidth="100" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.Resources>
                                                    <DataTemplate x:Key="CellTemplate">
                                                        <TextBlock />
                                                    </DataTemplate>
                                                </Grid.Resources>

                                                <DataGrid DataContext="{Binding Memory}" ItemsSource="{Binding Sections}" AutoGenerateColumns="false" CanUserResizeRows="False" CanUserResizeColumns="False" CurrentCellChanged="CurrentCellChanged"> 
                                                    <DataGrid.RowStyle>
                                                        <Style TargetType="{x:Type DataGridRow}">
                                                            <Setter Property="Header" Value="{Binding Name}" />
                                                        </Style>
                                                    </DataGrid.RowStyle>

                                                    <DataGrid.Columns>
                                                        <DataGridTemplateColumn Header="0" CellTemplate="{StaticResource CellTemplate}">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[0]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="1">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[1]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="2">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[2]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="3">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[3]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="4">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[4]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="5">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[5]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="6">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[6]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="7">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[7]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="8">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[8]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="9">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[9]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="A">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[10]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="B">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[11]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="C">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[12]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="D">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[13]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="E">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[14]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                        <DataGridTemplateColumn Header="F">
                                                            <DataGridTemplateColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">
                                                                    <Setter Property="Background" Value="{Binding FillColor[15]}" />
                                                                </Style>
                                                            </DataGridTemplateColumn.CellStyle>
                                                        </DataGridTemplateColumn>
                                                    </DataGrid.Columns>
                                                </DataGrid>

                                                <StackPanel Grid.Column="1" Margin="5 0" DataContext="{Binding Memory.CurrentMemoryByte}">
                                                    <TextBlock>
                                                        <Run Text="Adresse:" />
                                                        <Run Text="{Binding Name, Mode=OneWay}" />
                                                        <Run Text=" - " />
                                                        <Run Text="{Binding Address}" />
                                                    </TextBlock> 
                                                    <TextBlock>
                                                        <Run Text="Offset:" />
                                                        <Run Text="{Binding Offset}" />
                                                    </TextBlock> 

                                                    <ContentPresenter Content="{Binding}" ContentTemplateSelector="{StaticResource MemorySelector}" />
                                                </StackPanel>
                                            </Grid>
                                        </StackPanel>
                                    </ScrollViewer>
                                </TabItem>

                                <TabItem Header="Argumente" Style="{StaticResource LeftTabItem2}"> 
                                    <ctrl:ArgumentView Module="{Binding ElementName=ModuleList, Path=SelectedItem}" />
                                </TabItem>

                                <TabItem Header="Unions" Visibility="{Binding SelectedItem.IsUnionActive, ElementName=VersionList, Converter={StaticResource BoolToVis}}" Style="{StaticResource LeftTabItem2}">
                                    <ctrl:UnionView Version="{Binding ElementName=VersionList, Path=SelectedItem}" Module="{Binding ElementName=ModuleList, Path=SelectedItem}" />
                                </TabItem>

                                <TabItem Header="Parameter" Style="{StaticResource LeftTabItem2}">
                                    <ctrl:ParameterView Version="{Binding ElementName=VersionList, Path=SelectedItem}" Module="{Binding ElementName=ModuleList, Path=SelectedItem}" />
                                </TabItem>

                                <TabItem Header="Parameter Refs" Visibility="{Binding SelectedItem.IsParameterRefAuto, ElementName=VersionList, Converter={StaticResource BoolToVis}, ConverterParameter=true}" Style="{StaticResource LeftTabItem2}">
                                    <ctrl:ParameterRefView Module="{Binding ElementName=ModuleList, Path=SelectedItem}" />
                                </TabItem>

                                <TabItem Header="ComObjekte" Style="{StaticResource LeftTabItem2}">
                                    <ctrl:ComObjectView Version="{Binding ElementName=VersionList, Path=SelectedItem}" Module="{Binding ElementName=ModuleList, Path=SelectedItem}" />
                                </TabItem>

                                <TabItem Header="ComObjekte Refs" Visibility="{Binding SelectedItem.IsComObjectRefAuto, ElementName=VersionList, Converter={StaticResource BoolToVis}, ConverterParameter=true}" Style="{StaticResource LeftTabItem2}">
                                    <ctrl:ComObjectRefView Version="{Binding ElementName=VersionList, Path=SelectedItem}" Module="{Binding ElementName=ModuleList, Path=SelectedItem}" />
                                </TabItem>

                                <TabItem Header="Dynamic" Style="{StaticResource LeftTabItem2}">
                                    <ctrl:DynamicView Version="{Binding ElementName=VersionList, Path=SelectedItem}" Module="{Binding ElementName=ModuleList, Path=SelectedItem}" />
                                </TabItem>
                            </TabControl>
                        </Grid>
                    </TabItem>

                    <TabItem Header="Parameter" Style="{StaticResource LeftTabItem}">
                        <ctrl:ParameterView Version="{Binding ElementName=VersionList, Path=SelectedItem}" Module="{Binding ElementName=VersionList, Path=SelectedItem}" />
                    </TabItem>

                    <TabItem Header="ParameterRefs" Visibility="{Binding IsParameterRefAuto, Converter={StaticResource BoolToVis}, ConverterParameter=true}" Style="{StaticResource LeftTabItem}">
                        <ctrl:ParameterRefView Module="{Binding ElementName=VersionList, Path=SelectedItem}" />
                    </TabItem>

                    <TabItem Header="Comobjects" Style="{StaticResource LeftTabItem}">
                        <ctrl:ComObjectView Version="{Binding ElementName=VersionList, Path=SelectedItem}" Module="{Binding ElementName=VersionList, Path=SelectedItem}" />
                    </TabItem>

                    <TabItem Header="ComobjectRefs" Visibility="{Binding IsComObjectRefAuto, Converter={StaticResource BoolToVis}, ConverterParameter=true}" Style="{StaticResource LeftTabItem}">
                        <ctrl:ComObjectRefView Version="{Binding ElementName=VersionList, Path=SelectedItem}" Module="{Binding ElementName=VersionList, Path=SelectedItem}" />
                    </TabItem>


                    <TabItem Header="Ladeprozedur" Style="{StaticResource LeftTabItem}">
                        <ctrl:LoadProcedures Mask="{Binding SelectedItem.Mask, ElementName=AppList}" Version="{Binding SelectedItem, ElementName=VersionList}"/>
                    </TabItem>


                    <TabItem Header="Dynamic" Style="{StaticResource LeftTabItem}">
                        <ctrl:DynamicView Version="{Binding ElementName=VersionList, Path=SelectedItem}" Module="{Binding ElementName=VersionList, Path=SelectedItem}" />
                    </TabItem>


                </TabControl>
            </TabItem>

            <TabItem Style="{StaticResource TopTabItem}">
                <TabItem.Header>
                    <TextBlock FontSize="18" Text="{x:Static p:Resources.tabs_pub}" MouseLeftButtonUp="TabItem_MouseLeftButtonUp" />
                </TabItem.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <DataGrid Grid.RowSpan="2" Name="ExportList" AutoGenerateColumns="False" BorderThickness="0 0 1 0">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="Publish" Binding="{Binding Selected}" />
                            <DataGridTextColumn Header="Gerät" Binding="{Binding Device.Name}" />
                            <DataGridTextColumn Header="Hardware" Binding="{Binding Hardware.Name}" />
                            <DataGridTextColumn Header="Applikation" Binding="{Binding App.Name}" />
                            <DataGridTextColumn Header="Version" Binding="{Binding Version.NameText}" />
                        </DataGrid.Columns>
                    </DataGrid>

                    <StackPanel Grid.Column="1">
                        <StackPanel.Resources>
                            <Style TargetType="HeaderedContentControl">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                            <Style TargetType="ComboBox">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                            <Style TargetType="Button">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                            <Style TargetType="ListView">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </StackPanel.Resources>
                        <HeaderedContentControl Header="Filtern:">
                            <TextBox x:Name="ExportInFilter" TextChanged="ExportInFilter_TextChanged" />
                        </HeaderedContentControl>

                        <CheckBox x:Name="InPublishOnlyLatest" Content="Nur neueste Applikationversion exportieren" Checked="ChangedPublishOnlyLatest" Unchecked="ChangedPublishOnlyLatest" />

                        <ComboBox x:Name="InPublishTarget" SelectedIndex="0" SelectedValuePath="Tag">
                            <ComboBoxItem Content="ETS" Tag="ets" />
                            <ComboBoxItem Content="Kaenx" Tag="kaenx" IsEnabled="False" />
                        </ComboBox>
                        
                        <Button Content="Veröffentlichen" Click="Button_Click" />
                    </StackPanel>

                    <ScrollViewer Grid.Column="1" Grid.Row="1">
                        <ItemsControl ItemsSource="{Binding PublishActions}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border BorderBrush="Gray" BorderThickness="0 1 0 0">
                                        <StackPanel Margin="10 5">
                                            <TextBlock Text="{Binding Text}" Foreground="{Binding State, Converter={StaticResource StateToBrush}}" />
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
