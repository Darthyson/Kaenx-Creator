<UserControl
    x:Class="Kaenx.Creator.Controls.ParameterView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:Kaenx.Creator.Properties"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:conv="clr-namespace:Kaenx.Creator.Converter"
    xmlns:models="clr-namespace:Kaenx.Creator.Models"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    x:Name="ViewControl">
    <UserControl.Resources>
        <conv:EmptyToBool x:Key="EmptyToBool" />
        <conv:BoolToVisibility x:Key="BoolToVis" />
        <conv:EnumToVisibility x:Key="EnumToVis" />
        <conv:BoolNegation x:Key="BoolNegate" />
        <conv:BoolToBrush x:Key="BoolToBrush" TrueValue="Red" FalseValue="Black" />

        <ContextMenu x:Key="ListMenu">
            <MenuItem Header="{x:Static p:Resources.gen_clone}" Click="ClickClone" />
            <MenuItem Header="{x:Static p:Resources.gen_remove}" Click="ClickRemove" />
        </ContextMenu>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300" MinWidth="300" />
            <ColumnDefinition Width="10" />
            <ColumnDefinition MinWidth="300" />
        </Grid.ColumnDefinitions>

        <Button Content="{x:Static p:Resources.gen_add}" Click="ClickAdd" Margin="0 0 0 2" />

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <TextBlock Text="{x:Static p:Resources.gen_filter}" Margin="2 0 2 1" VerticalAlignment="Center" />
            <TextBox x:Name="query" Grid.Column="1" Margin="1 0 0 2" />
        </Grid>

        <ListBox x:Name="ParamList" Grid.Row="2" ItemsSource="{Binding Module.Parameters, ElementName=ViewControl}"
            AllowDrop="True" MouseMove="ListMouseMove" DragOver="ListDragOver" Drop="ListDrop">
            <ListBox.ItemTemplate>
				<DataTemplate>
					<TextBlock Text="{Binding Name}" Foreground="{Binding IsNotUsed, Converter={StaticResource BoolToBrush}}" />
				</DataTemplate>
			</ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="ContextMenu" Value="{StaticResource ListMenu}" />
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <GridSplitter Grid.Column="1" Grid.RowSpan="3" HorizontalAlignment="Stretch" />

        <ScrollViewer Grid.Column="2" Grid.RowSpan="3" DataContext="{Binding ElementName=ParamList, Path=SelectedItem}" IsEnabled="{Binding Converter={StaticResource EmptyToBool}, ConverterParameter=true}">
            <StackPanel Margin="5">
                <StackPanel.Resources>
                    <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="models:ParamAccess"/>
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                    <ObjectDataProvider x:Key="dataSave" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="models:SavePaths"/>
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                    <Style TargetType="HeaderedContentControl">
                        <Setter Property="Margin" Value="5" />
                        <Setter Property="IsTabStop" Value="false" />
                    </Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="Margin" Value="5" />
                    </Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="Margin" Value="0 5" />
                    </Style>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="5" />
                    </Style>
                    <Style TargetType="ListView">
                        <Setter Property="Margin" Value="5" />
                    </Style>
                </StackPanel.Resources>

                <TextBlock Margin="5 0" VerticalAlignment="Center">
                    <Run Text="{x:Static p:Resources.gen_uid}" />
                    <Run Text="{Binding UId}"/>
                </TextBlock>

                <Grid Margin="5 0">
                    <TextBlock VerticalAlignment="Center">
                        <Run Text="{x:Static p:Resources.gen_id}" />
                        <Run Text="{Binding Id}"/>
                    </TextBlock>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button Content="{x:Static p:Resources.gen_id_man}" Click="ManuelId" />
                        <Button Content="{x:Static p:Resources.gen_id_auto}" Click="AutoId" />
                        <Button Content="{x:Static p:Resources.gen_id_reset}" Click="ResetId" />
                    </StackPanel>
                </Grid>
                
                <TextBlock Text="{x:Static p:Resources.tpara_error}" Foreground="Red" Visibility="{Binding IsNotUsed, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Margin="5" />

                <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                </HeaderedContentControl>
                
                <HeaderedContentControl Header="{x:Static p:Resources.prop_value}">
                    <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}"/>
                </HeaderedContentControl>

                <HeaderedContentControl Header="{x:Static p:Resources.prop_access}">
                    <ComboBox ItemsSource="{Binding Source={StaticResource dataFromEnum}}" SelectedItem="{Binding Access, Mode=TwoWay}" />
                </HeaderedContentControl>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <HeaderedContentControl Header="{x:Static p:Resources.prop_type}">
                        <ComboBox x:Name="InType" IsEditable="true" ItemsSource="{Binding Version.ParameterTypes, ElementName=ViewControl}" DisplayMemberPath="Name" SelectedItem="{Binding ParameterTypeObject}" />
                    </HeaderedContentControl>

                    <TextBlock Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0 0 10 14">
                        <Run Text="{Binding ParameterTypeObject.SizeInBit}" />
                        <Run Text="{x:Static p:Resources.gen_bit}" />
                    </TextBlock>
                </Grid>

                <HeaderedContentControl Header="{x:Static p:Resources.tpara_union}" Visibility="{Binding Version.IsUnionActive, ElementName=ViewControl, Converter={StaticResource BoolToVis}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <CheckBox IsChecked="{Binding IsInUnion}" VerticalAlignment="Center" />
                        <ComboBox ItemsSource="{Binding Module.Unions, ElementName=ViewControl}" Grid.Column="1" IsEnabled="{Binding IsInUnion}" SelectedItem="{Binding UnionObject}" DisplayMemberPath="Name" />
                    </Grid>
                </HeaderedContentControl>

                <StackPanel Visibility="{Binding IsInUnion, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                    <HeaderedContentControl Header="{x:Static p:Resources.gen_union}">
                        <TextBlock Text="{Binding UnionObject.MemoryObject.Name}" />
                    </HeaderedContentControl>
                    <HeaderedContentControl Header="{x:Static p:Resources.prop_offset}">
                        <TextBox Text="{Binding Offset, UpdateSourceTrigger=PropertyChanged}"/>
                    </HeaderedContentControl>
                    <HeaderedContentControl Header="{x:Static p:Resources.prop_offsetbit}">
                        <TextBox Text="{Binding OffsetBit, UpdateSourceTrigger=PropertyChanged}"/>
                    </HeaderedContentControl>
                </StackPanel>

                <HeaderedContentControl Header="{x:Static p:Resources.prop_savepath}" Visibility="{Binding IsInUnion, Converter={StaticResource BoolToVis}, ConverterParameter=true, FallbackValue=Collapsed}">
                    <ComboBox ItemsSource="{Binding Source={StaticResource dataSave}}" SelectedItem="{Binding SavePath, Mode=TwoWay}" />
                </HeaderedContentControl>

                <Grid Visibility="{Binding IsInUnion, Converter={StaticResource BoolToVis}, ConverterParameter=true, FallbackValue=Collapsed}">
                    <StackPanel Visibility="{Binding SavePath, Converter={StaticResource EnumToVis}, ConverterParameter=Memory}">
                        <HeaderedContentControl Header="{x:Static p:Resources.prop_mem}">
                            <ComboBox ItemsSource="{Binding Version.Memories, ElementName=ViewControl}" SelectedItem="{Binding SaveObject, Mode=TwoWay}" DisplayMemberPath="Name" />
                        </HeaderedContentControl>

                        <StackPanel Visibility="{Binding SaveObject.IsAutoPara, Converter={StaticResource BoolToVis}, ConverterParameter=true, FallbackValue=Collapsed}">
                            <StackPanel>
                                <HeaderedContentControl Header="{x:Static p:Resources.prop_offset}">
                                    <TextBox Text="{Binding Offset, UpdateSourceTrigger=PropertyChanged}"/>
                                </HeaderedContentControl>
                                <HeaderedContentControl Header="{x:Static p:Resources.prop_offsetbit}">
                                    <TextBox Text="{Binding OffsetBit, UpdateSourceTrigger=PropertyChanged}"/>
                                </HeaderedContentControl>
                            </StackPanel>
                        </StackPanel>

                        <TextBlock Text="{x:Static p:Resources.tpara_infoauto}" Margin="5" Visibility="{Binding SaveObject.IsAutoPara, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" />

                        <Border Visibility="{Binding SaveObject.IsAutoPara, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                            <TextBlock Margin="5">
                                    <Run Text="{x:Static p:Resources.prop_offset}" />
                                    <Run Text="{Binding Offset, Mode=OneWay}" />
                                    <LineBreak />
                                    <Run Text="{x:Static p:Resources.prop_offsetbit}" />
                                    <Run Text="{Binding OffsetBit, Mode=OneWay}" />
                            </TextBlock>
                        </Border>
                    </StackPanel>

                    <StackPanel Visibility="{Binding SavePath, Converter={StaticResource EnumToVis}, ConverterParameter=Property}">
                        <HeaderedContentControl Header="{x:Static p:Resources.prop_objectindex}">
                            <ComboBox x:Name="ObjectTypeList" ItemsSource="{Binding ObjectTypes, ElementName=ViewControl}" SelectedValuePath="Number" SelectedValue="{Binding SaveObject.ObjectIndex}">
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ComboBoxItem}">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                
                                            <TextBlock Text="{Binding Number}" HorizontalAlignment="Right" />
                                            <TextBlock Grid.Column="1" Text="{Binding Text}" Margin="5 0" />
                                            <TextBlock Grid.Column="2" Text="{Binding Name}" HorizontalAlignment="Right" Margin="5 0" />
                                        </Grid>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </HeaderedContentControl>
                        <HeaderedContentControl Header="{x:Static p:Resources.prop_propid}">
                            <ComboBox ItemsSource="{Binding SelectedItem.Properties, ElementName=ObjectTypeList}" DisplayMemberPath="Text" SelectedValuePath="Number" SelectedValue="{Binding SaveObject.PropertyId}">
                            </ComboBox>
                        </HeaderedContentControl>
                        <HeaderedContentControl Header="{x:Static p:Resources.prop_offset}">
                            <TextBox Text="{Binding Offset, UpdateSourceTrigger=PropertyChanged}" />
                        </HeaderedContentControl>
                        <HeaderedContentControl Header="{x:Static p:Resources.prop_offsetbit}">
                            <TextBox Text="{Binding OffsetBit, UpdateSourceTrigger=PropertyChanged}" />
                        </HeaderedContentControl>
                    </StackPanel>
                </Grid>

                <HeaderedContentControl Header="{x:Static p:Resources.gen_text}">
                    <StackPanel>
                        <CheckBox IsChecked="{Binding TranslationText}" Content="{x:Static p:Resources.gen_onlydeflang}" />
                        <DataGrid ItemsSource="{Binding Text}" AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_suffix}">
                    <StackPanel>
                        <CheckBox IsChecked="{Binding TranslationSuffix}" Content="{x:Static p:Resources.gen_onlydeflang}" />
                        <DataGrid ItemsSource="{Binding Suffix}" AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </HeaderedContentControl>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>